//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TaxlandWF.localhost {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="landtaxSoap", Namespace="http://tempuri.org/")]
    public partial class landtax : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CalculateIndustrialLandTaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateVacantLandTaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateTaxForIndividualOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateTaxForLegalEntityOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateResidenceTax1OperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateResidenceTax2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateResidenceTax3OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public landtax() {
            this.Url = global::TaxlandWF.Properties.Settings.Default.TaxlandWF_localhost_landtax;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CalculateIndustrialLandTaxCompletedEventHandler CalculateIndustrialLandTaxCompleted;
        
        /// <remarks/>
        public event CalculateVacantLandTaxCompletedEventHandler CalculateVacantLandTaxCompleted;
        
        /// <remarks/>
        public event CalculateTaxForIndividualCompletedEventHandler CalculateTaxForIndividualCompleted;
        
        /// <remarks/>
        public event CalculateTaxForLegalEntityCompletedEventHandler CalculateTaxForLegalEntityCompleted;
        
        /// <remarks/>
        public event CalculateResidenceTax1CompletedEventHandler CalculateResidenceTax1Completed;
        
        /// <remarks/>
        public event CalculateResidenceTax2CompletedEventHandler CalculateResidenceTax2Completed;
        
        /// <remarks/>
        public event CalculateResidenceTax3CompletedEventHandler CalculateResidenceTax3Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CalculateIndustrialLandTax", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double CalculateIndustrialLandTax(double landValue) {
            object[] results = this.Invoke("CalculateIndustrialLandTax", new object[] {
                        landValue});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateIndustrialLandTaxAsync(double landValue) {
            this.CalculateIndustrialLandTaxAsync(landValue, null);
        }
        
        /// <remarks/>
        public void CalculateIndustrialLandTaxAsync(double landValue, object userState) {
            if ((this.CalculateIndustrialLandTaxOperationCompleted == null)) {
                this.CalculateIndustrialLandTaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateIndustrialLandTaxOperationCompleted);
            }
            this.InvokeAsync("CalculateIndustrialLandTax", new object[] {
                        landValue}, this.CalculateIndustrialLandTaxOperationCompleted, userState);
        }
        
        private void OnCalculateIndustrialLandTaxOperationCompleted(object arg) {
            if ((this.CalculateIndustrialLandTaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateIndustrialLandTaxCompleted(this, new CalculateIndustrialLandTaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CalculateVacantLandTax", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double CalculateVacantLandTax(double landValue) {
            object[] results = this.Invoke("CalculateVacantLandTax", new object[] {
                        landValue});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateVacantLandTaxAsync(double landValue) {
            this.CalculateVacantLandTaxAsync(landValue, null);
        }
        
        /// <remarks/>
        public void CalculateVacantLandTaxAsync(double landValue, object userState) {
            if ((this.CalculateVacantLandTaxOperationCompleted == null)) {
                this.CalculateVacantLandTaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateVacantLandTaxOperationCompleted);
            }
            this.InvokeAsync("CalculateVacantLandTax", new object[] {
                        landValue}, this.CalculateVacantLandTaxOperationCompleted, userState);
        }
        
        private void OnCalculateVacantLandTaxOperationCompleted(object arg) {
            if ((this.CalculateVacantLandTaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateVacantLandTaxCompleted(this, new CalculateVacantLandTaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CalculateTaxForIndividual", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal CalculateTaxForIndividual(decimal landValue, decimal buildingValue) {
            object[] results = this.Invoke("CalculateTaxForIndividual", new object[] {
                        landValue,
                        buildingValue});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateTaxForIndividualAsync(decimal landValue, decimal buildingValue) {
            this.CalculateTaxForIndividualAsync(landValue, buildingValue, null);
        }
        
        /// <remarks/>
        public void CalculateTaxForIndividualAsync(decimal landValue, decimal buildingValue, object userState) {
            if ((this.CalculateTaxForIndividualOperationCompleted == null)) {
                this.CalculateTaxForIndividualOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateTaxForIndividualOperationCompleted);
            }
            this.InvokeAsync("CalculateTaxForIndividual", new object[] {
                        landValue,
                        buildingValue}, this.CalculateTaxForIndividualOperationCompleted, userState);
        }
        
        private void OnCalculateTaxForIndividualOperationCompleted(object arg) {
            if ((this.CalculateTaxForIndividualCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateTaxForIndividualCompleted(this, new CalculateTaxForIndividualCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CalculateTaxForLegalEntity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal CalculateTaxForLegalEntity(decimal landValue, decimal buildingValue) {
            object[] results = this.Invoke("CalculateTaxForLegalEntity", new object[] {
                        landValue,
                        buildingValue});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateTaxForLegalEntityAsync(decimal landValue, decimal buildingValue) {
            this.CalculateTaxForLegalEntityAsync(landValue, buildingValue, null);
        }
        
        /// <remarks/>
        public void CalculateTaxForLegalEntityAsync(decimal landValue, decimal buildingValue, object userState) {
            if ((this.CalculateTaxForLegalEntityOperationCompleted == null)) {
                this.CalculateTaxForLegalEntityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateTaxForLegalEntityOperationCompleted);
            }
            this.InvokeAsync("CalculateTaxForLegalEntity", new object[] {
                        landValue,
                        buildingValue}, this.CalculateTaxForLegalEntityOperationCompleted, userState);
        }
        
        private void OnCalculateTaxForLegalEntityOperationCompleted(object arg) {
            if ((this.CalculateTaxForLegalEntityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateTaxForLegalEntityCompleted(this, new CalculateTaxForLegalEntityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CalculateResidenceTax1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal CalculateResidenceTax1(decimal landValue, decimal buildingValue) {
            object[] results = this.Invoke("CalculateResidenceTax1", new object[] {
                        landValue,
                        buildingValue});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateResidenceTax1Async(decimal landValue, decimal buildingValue) {
            this.CalculateResidenceTax1Async(landValue, buildingValue, null);
        }
        
        /// <remarks/>
        public void CalculateResidenceTax1Async(decimal landValue, decimal buildingValue, object userState) {
            if ((this.CalculateResidenceTax1OperationCompleted == null)) {
                this.CalculateResidenceTax1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateResidenceTax1OperationCompleted);
            }
            this.InvokeAsync("CalculateResidenceTax1", new object[] {
                        landValue,
                        buildingValue}, this.CalculateResidenceTax1OperationCompleted, userState);
        }
        
        private void OnCalculateResidenceTax1OperationCompleted(object arg) {
            if ((this.CalculateResidenceTax1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateResidenceTax1Completed(this, new CalculateResidenceTax1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CalculateResidenceTax2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal CalculateResidenceTax2(decimal landValue, decimal buildingValue) {
            object[] results = this.Invoke("CalculateResidenceTax2", new object[] {
                        landValue,
                        buildingValue});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateResidenceTax2Async(decimal landValue, decimal buildingValue) {
            this.CalculateResidenceTax2Async(landValue, buildingValue, null);
        }
        
        /// <remarks/>
        public void CalculateResidenceTax2Async(decimal landValue, decimal buildingValue, object userState) {
            if ((this.CalculateResidenceTax2OperationCompleted == null)) {
                this.CalculateResidenceTax2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateResidenceTax2OperationCompleted);
            }
            this.InvokeAsync("CalculateResidenceTax2", new object[] {
                        landValue,
                        buildingValue}, this.CalculateResidenceTax2OperationCompleted, userState);
        }
        
        private void OnCalculateResidenceTax2OperationCompleted(object arg) {
            if ((this.CalculateResidenceTax2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateResidenceTax2Completed(this, new CalculateResidenceTax2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CalculateResidenceTax3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal CalculateResidenceTax3(decimal landValue, decimal buildingValue) {
            object[] results = this.Invoke("CalculateResidenceTax3", new object[] {
                        landValue,
                        buildingValue});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateResidenceTax3Async(decimal landValue, decimal buildingValue) {
            this.CalculateResidenceTax3Async(landValue, buildingValue, null);
        }
        
        /// <remarks/>
        public void CalculateResidenceTax3Async(decimal landValue, decimal buildingValue, object userState) {
            if ((this.CalculateResidenceTax3OperationCompleted == null)) {
                this.CalculateResidenceTax3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateResidenceTax3OperationCompleted);
            }
            this.InvokeAsync("CalculateResidenceTax3", new object[] {
                        landValue,
                        buildingValue}, this.CalculateResidenceTax3OperationCompleted, userState);
        }
        
        private void OnCalculateResidenceTax3OperationCompleted(object arg) {
            if ((this.CalculateResidenceTax3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateResidenceTax3Completed(this, new CalculateResidenceTax3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CalculateIndustrialLandTaxCompletedEventHandler(object sender, CalculateIndustrialLandTaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateIndustrialLandTaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateIndustrialLandTaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CalculateVacantLandTaxCompletedEventHandler(object sender, CalculateVacantLandTaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateVacantLandTaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateVacantLandTaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CalculateTaxForIndividualCompletedEventHandler(object sender, CalculateTaxForIndividualCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateTaxForIndividualCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateTaxForIndividualCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CalculateTaxForLegalEntityCompletedEventHandler(object sender, CalculateTaxForLegalEntityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateTaxForLegalEntityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateTaxForLegalEntityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CalculateResidenceTax1CompletedEventHandler(object sender, CalculateResidenceTax1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateResidenceTax1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateResidenceTax1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CalculateResidenceTax2CompletedEventHandler(object sender, CalculateResidenceTax2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateResidenceTax2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateResidenceTax2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CalculateResidenceTax3CompletedEventHandler(object sender, CalculateResidenceTax3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateResidenceTax3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateResidenceTax3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591